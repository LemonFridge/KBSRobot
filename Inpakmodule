// Include the Servo library
#include <Servo.h>

int motorsnelheid1 = 4;
int motorrichting1 = 5;
int motorsnelheid2 = 6;
int motorrichting2 = 7;

int trigPin = 2;    // Trigger Ultrasoon
int echoPin = 3;    // Echo Ultrasoon
long duration, ultrasoon;

int L1 = A1;
int L2 = A2;
int L3 = A3;

int lijn1_BreakPoint = 500;
int lijn2_BreakPoint = 500;
int lijn3_BreakPoint = 500;

int servoPin1 = 13;
int servoPin2 = 12;

Servo Servo1;
Servo Servo2;

char buf[10];

byte blok;
char blokKleur; // Als het nummer van de Java Applicatie voor servoKleur 1 is, is de kleur blauw. Als het 2 is, is de kleur rood.
byte Status;

byte doos1B;
byte doos2B;
byte doos1R;
byte doos2R;

boolean signaal;
boolean scanning;

void setup() {
  Servo1.attach(servoPin1);
  Servo2.attach(servoPin2);
  Serial.begin(9600);

  Servo1.write(65);
  Servo2.write(65);

  pinMode(A1, INPUT);
  pinMode(A2, INPUT);
  pinMode(A3, INPUT);

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
}

void loop() {

  if (scanning) {

    scan();

  }

  if (Serial.available() > 0) {

    Status = Serial.read();

    if (signaal) {
      doos1B = Status;
      doos2B = Status;
      doos1R = Status;              //tested and approved!!
      doos2R = Status;
      signaal = false;

    }

    else if (Status == 1) {
      analogWrite(motorsnelheid1, 210);
      digitalWrite(motorrichting1, HIGH);
      analogWrite(motorsnelheid2, 210);
      digitalWrite(motorrichting2, HIGH);
      scanning = true;
    }


    else if (Status == 2) {
      analogWrite(motorsnelheid1, 0);
      digitalWrite(motorrichting1, LOW);
      analogWrite(motorsnelheid2, 0);
      digitalWrite(motorrichting2, LOW);
      scanning = false;
    }

    else if (Status == 3) { //color blue
      blokKleur = 1;
    }
    else if (Status == 4) { //color red
      blokKleur = 2;
    }

    else if (Status == 5) { //maximum box capacity signal
      signaal = true;
    }
  }
}

void scan () {

  // The sensor is triggered by a HIGH pulse of 10 or more microseconds.
  // Give a short LOW pulse beforehand to ensure a clean HIGH pulse:
  digitalWrite(trigPin, LOW);
  delay(5);
  digitalWrite(trigPin, HIGH);
  delay(10);
  digitalWrite(trigPin, LOW);

  duration = pulseIn(echoPin, HIGH);

  // Convert the time into a distance
  ultrasoon = (duration / 2) ;

  //Serial.print(ultrasoon);

  if (ultrasoon < 115  && (blokKleur == 1 || blokKleur == 2)) {
    Serial.println("3");//blok is 3 hoog
    blok = 3;
    binPacking();
  } if (ultrasoon < 150 && ultrasoon > 115 && (blokKleur == 1 || blokKleur == 2)) {
    Serial.println("2"); //blok is 2 hoog
    blok = 2;
    binPacking();
  } if ((ultrasoon > 150 && blokKleur == 1) || (ultrasoon > 150 && blokKleur == 2)) {
    Serial.println("1"); //blok is 1 hoog
    blok = 1;
    binPacking();
  }

  //scanning logic here
  // call after succesful scan binPacking();

}


void binPacking() {
  if (blokKleur == 1) {

    if (doos1B - blok >= 0) {

      doos1B = doos1B - blok;
      Servo1.write(0);
      Serial.println("6"); // doos1 rood ++

    } else if (doos2B - blok >= 0) {

      doos2B = doos2B - blok;
      Servo1.write(45);
      Serial.println("7"); // doos2 rood ++

    } else {

      Serial.println("4"); //dozen blauw zijn vol

    }

  } else {

    if (doos1R - blok >= 0) {

      doos1R = doos1R - blok;
      Servo2.write(45);

      Serial.println("8"); // doos 1 blauw ++

    } else if (doos2R - blok >= 0) {

      doos2R = doos2R - blok;
      Servo2.write(0);

      Serial.println("9"); //doos 2 blauw ++

    } else {

      Serial.println("5"); //dozen rood zijn vol

    }
  }
  blok = 0;
  blokKleur = 0;
  delay(250);
}
